
#######################################################
## Unsteady Vector Fields in Steady Reference Frames ##
#######################################################

This folder contains a VTK implementation for the 2D case of the papers:
  
  Irene Baeza Rojo, Tobias Günther
  Vector Field Topology of Time-Dependent Flows in a Steady Reference Frame
  IEEE Transactions on Visualization and Computer Graphics (IEEE Scientific Visualization 2019), 2020.

  Tobias Günther, Holger Theisel
  Hyper-Objective Vortices
  IEEE Transactions on Visualization and Computer Graphics, 2019.
  
  Tobias Günther, Markus Gross, Holger Theisel
  Generic Objective Vortices for Flow Visualization
  ACM Transactions on Graphics (Proc. SIGGRAPH), 2017.
  

============================================
VTK class vtkReferenceFrameFilter
============================================
The class vtkReferenceFrameFilter implements an vtkImageAlgorithm that transforms a given unsteady 2D vector field into an optimal reference frame. The user may set the neighborhood region for the local fitting of the reference transformation, and may choose among four supported classes of reference frame invariance, namely objectivity, similarity invariance, affine invariance and the displacement optimization.

============================================
Example program ReferenceFrameFilter.cxx
============================================
The file ReferenceFrameFilter.cxx contains a command line program that demonstrates the vtkReferenceFrameFilter. The command line tool transforms a vector field that is given in the VTKImageData XML format (*.vti), and writes the result into a vti-file. Note that the vector field must be given in 2D space-time, i.e., the third dimension is time. The following tuples are expected "v", "vx", "vy", "vt", containing the flow and the first-order derivatives.
The command line arguments are:
  1. the path to the vector field in *.vti XML format
  2. the neighborhood size
  3. the selected type of reference frame invariance (0=objectivity, 1=similarity invariance, 2=affine invariance, 3=displacement optimization)
  4. the Taylor approximation order (only read when displacement optimization is chosen)
If no vector field is passed as argument, the command line tool uses a simple Stuart vortex vector field.

============================================
Requirements
============================================
Dependencies:
- C++ 11                 (tested with Visual Studio 2019)
- CMake                  (tested with CMake 3.21.1)
- VTK                    (tested with VTK 9.0.1)
- Eigen                  (tested with Eigen 3.3.7)

Tested on:
- Windows 10

============================================
Installation
============================================
Use CMake to setup your build environment. During configuration, the path to VTK (build folder) and Eigen (header-only library) must be specified.

The source code is kept simple and is meant for educational purposes only.
